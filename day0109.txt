<데이터 베이스 명령어 sql의 종류>
1.DDL(Data Defination Language)         데이터 정의어
2.DCL(Data Control Language)	  데이터 제의어
3.DML(Data Manufulation Language)	  데이터 조작어
-----------------------------------------------------
서점관리를 위한 데이터베이스 케이블들을 생성

1. 도서
2. 고객
3. 주문
________________________________________________________________________________________________________
1-1 도서(도서번호*, 도서명, 출판사, 가격)
Book(bookid*,bookname,publisher,price)

<테이블을 생성하는 방법>

1. create table 테이블명( 속성명 1 자료형 제약 ,속성명 2 자료형, . . . . .  );
	 //밑에 실행

2. create table book(bookid number primary key, bookname varchar2(50) 
				, publisher varchar2(20), price number);


4. 생성된 테이블의 구조확인
	sql> desc book;

5. 테이블에 자료를 추가하기

insert into 테이블명 values(값1, 값2, . . . . . . );
값의 개수는 테이블구조의 속성수와 동일해야 합니다.
또, 값의 순서도 테이블 구조의 순서와 동일해야 합니다.
또, 문자열을 반드시 홋따옴표로 묶어요.

6. 9권의 도서를 한번에 추가하는 파일을 생성
   sql> ed book
   
7. 파일을 한번에 열어줌
sql>@book


8. 추가한 10권의 도서를 데이터 베이스에 반영
sql>commit

9. 자료의 확인 (검색)
select 컬럼1, 컬럼2, . . . from 테이블명;






연습) book테이블의 모든 도서명을 확인해 보세요.
select bookname from book;

column bookid format 9999;
column bookname format a20;
column publisher format a10;
column price format 999,999;



연습) book테이블의 모든 정보 출력해보세요

select bookid,bookname,publisher,price from book;
(=) select * from book;






커스터머 연습

column cusid format 9999;
column name format a10;
column address format a15;
column phone format a15;




____________________________________________________________________________________


1. 서점관리데이터베이스의 권한이 있는 사용자 계정을 생성해요.
	데이터베이스 관리자(sys,system)계정이
	         접속하여 사용자 계정을 생성

	c:>sqlplus
	사용자명: system
	비밀번호: manager      :: 암호를 입력하는 동안 글씨가 안보인다

______________________________________________________________________________________

SQL>create user c##madang identified by madang      (마당 계정 생성)
SQL> grant connect, resource, dba to c##madang;  (권한 부여)

SQL> conn c##madang/madang              (유저 계정에서 마당계정으로 변경)
연결되었습니다.


________________________________________________________________________________________



orders 테이블의 생성

주문을 위해서 필요한 테이블을 다음과 같이 생성해요
필요한것->
order(orderid*,custid,bookid,saleprice,orderdate)

누가	custid
어떤책을	bookid
언제	orderdate
얼마에	saleprice
구매하였는지를 저장한다

이때 오덜스 테이블에 나타나는 커스트아이디는 
반드시 커스터머테이블에 존재하는 커스트아이디 이어야 한다
====> "관계"를 설정 	주종관계(부모-자식관계)

마찬가지로
오덜스 테이블에 나타나는 북아이디는 반드시 북 테이블에서 가져와야함

create table orders(
orderid number primary key,
custid number references customer(cusid),
bookid number references book(bookid),
saleprice number,
orderdate date);


//references 부모의 주 식별자로 설정한다




____________________


insert into orders values(1, 1, 1, 6000, '2014/07/01');
insert into orders values(2, 1, 3, 21000, '2014/07/03');
insert into orders values(3, 2, 5, 8000, '2014/07/03');
insert into orders values(4, 3, 6, 6000, '2014/07/04');
insert into orders values(5, 4, 7, 20000, '2014/07/05');
insert into orders values(6, 1, 2, 12000, '2014/07/07');
insert into orders values(7, 4, 8, 13000, '2014/07/07');
insert into orders values(8, 3, 10, 12000, '2014/07/08');
insert into orders values(9, 2, 10, 7000, '2014/07/09');
insert into orders values(10, 3, 8, 13000, '2014/07/10');









___ 커스터머아이디 순서대로 정렬
select * from customer
order by cusid;



_________________________________________________________________________________________________

Statment를 통해 사용하는 메소드

	1. executeUpdate
		데이터베이스에 변동이 있는 명령을 실행할때 사용
		데이터베이스에 새로운 레코드를 추가  - insert
		데이터베이스에 레코드를 수정           - update
		데이터베이스에 레코드를 삭제	           - delete

	executeUpdate 를 sql명령을 실행하고 
		int를 반환
		성공적으로 

_________________________________________________________________________________________________