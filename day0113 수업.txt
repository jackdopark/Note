1. dept(dno*,dname,dloc)
2. emp(eno,ename,job,sal,comm,mgr,dno)

create table dept(dno number primary key,
dname varchar2(50),
dloc varchar2(50));

create table emp(eno number primary key,
ename varchar2(20),
job varchar2(20),
sal number,
comm number,
mgr number,
hiredate date,
dno number references dept(dno));

insert into dept values(100,'도토리','서울');
insert into dept values(200,'하기나름','부산');
insert into dept values(300,'출발개발팀','서울');
insert into dept values(400,'자바잡아','광주');
insert into dept values(500,'총무부','서울');

insert into emp values(1000,'유진탁','사장',20000,0,null,'2000/01/03',500);

insert into emp values(1001,'이동현','과장',500,50,1000,'2001/12/03',100);
insert into emp values(1001,'이종호','대리',400,40,1001,'2017/12/03',100);
insert into emp values(1002,'전은진','대리',400,40,1001,'2017/12/03',100);
insert into emp values(1003,'홍수지','사원',300,30,1001,'2019/12/03',100);
insert into emp values(1004,'서동욱','사원',300,30,1001,'2019/12/03',100);
insert into emp values(1005,'박유철','사원',300,30,1001,'2019/12/03',100);
insert into emp values(1006,'김정규','사원',300,30,1001,'2019/12/03',100);



insert into emp values(1008,'주영현','과장',500,50,1000,'2010/04/07',200);
insert into emp values(1009,'김찬휘','대리',400,40,1008,'2009/12/11',200);
insert into emp values(1010,'','김민주','대리,400,40,1008,'2013/12/03',200);
insert into emp values(1011,'곽아름','대리',300,40,1008,'2015/12/03',200);
insert into emp values(1012,'장채은','대리',300,40,1008,'2017/07/07',200);


insert into emp values(1013,'이희재','과장',500,50,1000,'2015/05/06',300);
insert into emp values(1014,'이수인','대리',400,40,1013,'2001/12/03',300);
insert into emp values(1015,'현민아','대리',400,40,1013,'2001/12/03',300);
insert into emp values(1016,'한주련','사원',300,30,1013,'2001/12/03',300);
insert into emp values(1017,'이원우','사원',300,30,1013,'2001/12/03',300);
insert into emp values(1018,'최영수','사원',300,30,1013,'2001/12/03',300);
insert into emp values(1019,'최봉현','사원',300,30,1013,'2019/05/06',300);





insert into emp values(1020,'이근희','과장',500,50,1000,'2015/05/06',400);
insert into emp values(1021,'곽설아','대리',400,40,1020,'2015/05/06',400);
insert into emp values(1022,'김혜선','대리',400,40,1020,'2015/05/06',400);
insert into emp values(1023,'하지연','사원',300,30,1020,'2015/05/06',400);
insert into emp values(1024,'박도형','사원',300,30,1020,'2015/05/06',400);
insert into emp values(1025,'고요한','사원',300,30,1020,'2015/05/06',400);
insert into emp values(1026,'유현성','사원',300,30,1020,'2015/05/06',400);



column dno format 9999;
column dname format a10;
column dloc format a10;

column eno format 9999;
column ename format a10;
column job format a10;
column sal format 9,999,999;
column comn format 9,999;
column mgr format 9999;
column hiredate format a15;

연습) 서울에 근무하는 모든 사원의 사원번호, 이름, 부서번호, 부서명, 급여를 출력

연습) 박유철의 근무지를 출력하세요.
select dloc from emp e,dept d
	where e.dno=d.dno and
	ename = '박유철';


연습) 모든 도서의 도서번호,도서이름,출판사,가격을 검색
select bookid,bookname,publisher,price from book;

select * from book;




연습) 도서테이블에 있는 모든 출판사를 검색
select publisher from book;

select distinct publisher from book;


** 조건에 맞는 데이터를 검색하기 위해서는 
	where 절을 사용해요
	
	where절에는 다양한 연산자를 이용하여 
	조건식을 표현할 수 있어요.
	

연습) 가격이 20000원 미만인 도서의 정보를 출력
select * from book where price < 20000;	


연습) 가격이 10000원이상 20000원 이하인 도서를 출력
select * from book where price >= 10000 and price <= 20000;
select * from book where price between 10000 and 20000;

연습) 출판사가 '대한미디어'이거나 '이상미디어' 인 도서의 정보를 출력
select * from book where publisher = '대한미디어' or publisher = '이상미디어';
select * from book where publisher in ('대한미디어','이상미디어');

연습) 출판사가 '굿스포츠'도 아니고 '대한미디어'도 아닌 도서를 검색하세요.
select * from book where publisher not in ('굿스포츠','대한미디어');
select * from book where publisher != '굿스포츠' and publisher != '대한미디어';

<< like 연산자 >>
문자열값이 특정 패턴을 만족하는 데이터를 검색하고자 할 때 사용.

%	: 모르는 여러글자
_	: 모르는 한글자


~~~ where bookname like '축구%'
	도서명이 "축구" 시작하는 모든 글자
	축구
	축구아는 여자
	축구공
	
~~~ where bookname like '축구_'
		축구공
		축구왕	
	

~~~ where bookname like '축구';
~~~ where bookname = '축구';
		축구
			
	 

~~~ where bookname like '%축구'
	누구라도 잘하는 축구
	내가 아는 축구
	
	
~~~ where bookname like '%축구%'
	내가 아는 축구
	나의 꿈은 축구 선수
	축구아는 여자	 


~~~ where bookname like '_축구_';
	
	나축구왕
	너축구왕
	축구아는 여자  X


~~~ where bookname like '__축구';
		나의축구
	


연습) 도서명이 '축구'를 포함하는 모든 도서를 출력
select * from book where bookname like '%축구%';


연습) 도서명이 '축구'를 포함하는 도서를 구매한 
		고객의 이름,고객번호, 구매일, 구매가격, 도서명, 출판사를 출력
		
	select name,c.cusid,orderdate,saleprice,bookname,publisher
		from book b, customer c, orders o
		where b.bookid = o.bookid and 
		c.cusid = o.cusid and 
		bookname like '%축구%';		

연습) 대한민국에 거주하는 고객의 이름, 주소를 출력
select name, address from customer where 
	address like '대한민국%';


연습)  도서명의 두번째 글자가 "구"글자인 도서의 
			도서명, 가격을 출력하세요.
			
select bookname, price from book
	where bookname like '_구%';			




연습) '축구'에 관한 도서중에 가격이 20000원 이상인 도서를 검색하시오.
select * from book where 
	bookname like '%축구%' and 
	price >= 20000;


연습) 출판사가 '굿스포츠' 혹은 '대한미디어' 인 도서를 검색
select * from book
	where publisher = '굿스포츠' or publisher = '대한미디어';
	
select * from book
	where publisher in ('굿스포츠','대한미디어');	



<< order by >>
데이터를 정렬하여 출력하고 싶어요!

정렬: 순서대로 놓는것
	오름차순 : 값이 작은 것 부터 순서대로	asc
	내림차순 : 값이 큰 것 부터 순서대로		desc


select * from book;

select * from book order by bookname desc;
select * from book order by bookname;
select * from book order by bookname asc;


연습) 모든 도서를 출판사명 순으로 출력하세요.
select * from book order by publisher;


연습) 모든 도서를 출판사 순으로 출력하세요.
		출판사가 동일할 때에는 도서가격의 높은순으로 출력하세요.

select * from book order by publisher, price desc;		



연습) '대한미디어' 나 '이상미디어'의 도서중에 
			가격이 20000원이상인 도서를 구매한
			고객의 이름, 주소, 도서명, 출판사, 구매일, 구매가격
			을 출력하시오.
			단, 구매일 순으로 출력하되
			구매일이 동일할 때에는 구매가격이 높은순으로 출력합니다.
			
	select name,address,bookname,publisher,orderdate,price
	from book b, orders o, customer c
	where b.bookid = o.bookid and 
	c.cusid = o.cusid and 
	publisher in ('대한미디어','이상미디어') and
	price >= 20000
	order by orderdate, price desc;		 


31쪽

연습)  '서울'이나 '광주'에 근무하는 직원들의 이름의 
			성씨가 '이'씨인 사람들의 
			부서번호, 부서명, 근무지, 사원명, 급여, 직급을
			출력하세요.
			단 급여가 높은 순으로 출력하되
			동일할 때에는 이름순으로 출력합니다. 
			
select e.dno, dname, dloc, ename, sal, job
from emp e, dept d
where e.dno = d.dno and 
dloc in ('서울', '광주') and 
ename like '이%'
order by sal desc, ename;				

연습) 모든 직원들의 이름과 직위를 출력하세요.
select ename,job from emp;


연습) 도토리팀에 근무하는 직원들의 이름과 급여를 출력하세요
select ename, sal from 
	emp e, dept d
	where e.dno = d.dno and
	dname = '도토리';



연습) 도토리팀에 근무하는 직원들의 이름과 실수령액을 출력하세요.
				(실수령액은 급여+수당)
				
	select ename, sal+comm from 
		emp e, dept d
		where e.dno = d.dno and
		dname = '도토리';		
		


연습) 도서번호 1번인 도서의 이름
select bookname from book where bookid = 1;

연습) 가격이 20000원 이상인 도서의 이름
select bookname from book where price >= 20000;

연습) '박지성'이 구매한 도서의 이름, 가격, 정가와 판매가격의 차이
select bookname, price, price-saleprice from 
	customer c, orders o, book b
	where c.cusid = o.cusid and
	b.bookid = o.bookid and 
	name = '박지성';

연습) '박지성'이 구매하지 않는 도서의 이름

<<박지성이 구매하지 않은 도서목록을 출력하는 sql로는 부적합하다,
	모든 도서에서 출력하는 것이 아니라 구매가 일어난 도서중에 구매자가 박지성이 아닌 도서를
	뽑는다. 만약 박지성이 구매한 도서를 다른사람도 구매하였다면 그 책이 출력된다
	또 모든 도서중에 한번도 구매가 일어나지 않는 도서가 출력되지 않는다
	포인트는 '모든 도서' 이다.

select bookname,name from 
	book b, orders o, customer c
	where b.bookid = o.bookid and
	c.cusid = o.cusid and
	name != '박지성';



<< 옳바른 방법>>

모든도서목록
minus
박지성이 구매한 도서목록

select bookname from book
minus
select bookname from 
book b, orders o, customer c
where b.bookid = o.bookid and
c.cusid = o.cusid and
name = '박지성';





연습) 모든 고객의 이름,주소
select name,address from customer;


연습) 2014년 7월 4일 ~ 7월 7일 사이에 주문받은 도서의 주문번호
select orderid from orders 
where orderdate between '2014/07/04' and '2014/07/07';

select orderid from orders 
where orderdate >= '2014/07/04' and orderdate <= '2014/07/07';


연습) 2014년 7월 4일 ~ 7월 7일 사이에 주문받은 도서를 제외안 도서의 주문번호
select orderid from orders 
	where orderdate not between '2014/07/04'  and '2014/07/07';
	
select orderid from orders 
	where orderdate < '2014/07/04' or orderdate > '2014/07/07';	

연습) 성이 '김'씨인 고객의 이름과 주소
select name, address from customer where name like '김%';

연습) 성이 '김'씨이고 이름이 '아'로 끝나는 고객의 이름과 주소
select name, address from customer where name like '김%아';

연습) 고객의 이름과 고객이 구매한 도서목록
select name, bookname from 
	customer c, orders o, book b
	where c.cusid = o.cusid and 
	b.bookid = o.bookid;

_______________________________________________________________________________

연습) 새로운 부서를 등록하는 웹 어플리케이션을 작성



_______________________________________________________________________________
<집계함수>
sum,avg,count,max,min . .

연습) 고객이 주문한 도서의 총 판매액을 출력
select saleprice from orders;
select sum(saleprice) from orders;

연습) 고객이 주문한 도서의 평균판매액을 출력
select avg(saleprice) from orders;

연습) 고객이 주문한 도서의 최고 판매액을 출력
select max(saleprice) from orders;

연습) 고객이 주문한 도서의 최저 판매액을 출력
select min(saleprice) from orders;

연습) 모든 고객의 수를 출력
select count(*) from customer;
select count(name) from customer;
select cournt(phone) from customer;
____________
< 애칭 >

select sum(saleprice) from orders;
select sum(saleprice) as 총매출 from orders;

rs.getInt(1)



___________

연습) 2번 김연아 고객이 주문한 도서의 총판매액을 출력
select sum(saleprice) from orders
where cusid =2;

이름만 알 때
select sum(saleprice) from orders o,customer c
where o.cusid = c.cusid and name = '김연아';

select sum(saleprice),avg(saleprice),max(saleprice),min(saleprice)
from orders;

select count(*) from orders;


연습) '굿스포츠'에서 출판하는 모든 도서의 수를 출력
select count(*) from book where publisher = '굿스포츠';

연습) '굿스포츠'출판사의 총매출액을 출력
select sum(saleprice) from book b, orders o
	where b.bookid = o.bookid and 
	publisher = '굿스포츠';

연습) '굿스포츠'출판사의 도서의 평균가격을 출력
select avg(price) from book
	where publisher = '굿스포츠';


연습) '굿스포츠'출판사의 총매출액과 총매출건수를 출력
select sum(saleprice), count(*) from
	book b, orders o
	where b.bookid = o.bookid and
	publisher = '굿스포츠';


연습) '박지성'고객의 총구매건수와 총구매액, 평균구매액을 출력
select count(*), sum(saleprice), avg(saleprice) 
	from customer c, orders o 
	where c.custid = o.custid and
	name = '박지성';


연습) '굿스포츠'의 도서의 가장비싼 도서와 가장 싼 도서가격의 
		차이를 출력
		
	select max(price) - min(price)
		from book
		where publisher = '굿스포츠';		
		
연습) 직급이 '대리'이거나 '사원'사람들의 
		평균급여, 사람수를 출력하시오.
	
select avg(sal), count(*) from 
	emp
	where job in('대리', '사원');

_____________________________________________________________________________

select sum(price) from book;      // 데이터가 1행 나온다
select bookname from book;     // 데이터가 11건 나온다

select bookname,sum(price) from book; 	// 불법이다.
					// 칼럼이름과 함께 나올수 없다.

_____________________________________________________________________________

<<group by>>
 컬럼의 특정값의 

연습) 모든 도서의 수를 출력
select count(*) from book;   //결과의 행의 수= 1건

연습) 출판사별 도서의 수를 출력

select count(*) from book group by publisher; //결과의 행의 수= 출판사의 수 만큼 나온다.

둘이 한번에 쓸 수 없다.'

연습) 부서별 직원의 수를 출력하세요.

select dname, count(*) from 
	dept d, emp e
	where d.dno = e.dno
	group by dname;



연습)고객별 총 구매건수와 총 구매액, 평균구매액을 출력하세요
	단 총 구매액이 높은 순으로 출력합니다.

select name, count(*) as 총구매건수,
sum(saleprice) as 총구매액,
round(avg(saleprice),0) as 평균구매액,
from customer c, orders o
where c.custid = o.cusid
group by name order by sum(saleprice) desc;

연습) 박지성의 총구매액
select sum(saleprice) from orders
	where cusid=(select cusid from customer where name='박지성');

select cusid from customer where name='박지성';
 
연습) 박지성이 구매한 도서의 수

select count(bookid) 
	from book b, customer c, orders o
	where b.bookid = o.bookid and
	c.cusid=o.cusid and
	name = '박지성';

연습) 박지성이 구매한 출판사의 수
select









